name: DEV

on:
  push:
    branches:
      - dev
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/dev.yml'

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from template
        run: |
          cp .env.template .env
          sed -i "s/{{DB_DIALECT}}/${{secrets.DB_DIALECT}}/g" .env
          sed -i "s/{{DB_HOST}}/${{secrets.DB_HOST}}/g" .env
          sed -i "s/{{DB_NAME}}/${{secrets.DB_NAME}}/g" .env
          sed -i "s/{{DB_USER}}/${{secrets.DB_USER}}/g" .env
          sed -i "s/{{DB_PASS}}/${{secrets.DB_PASS}}/g" .env

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{secrets.SERVER_HOST}} >> ~/.ssh/known_hosts
      
      - name: Stop server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "cd ${{secrets.SERVER_ROOT}} && npx pm2 delete ${{secrets.SERVER_PROCESS_NAME}}"
        continue-on-error: true

      - name: Deploy code to server
        run: rsync -arv --delete ./ ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}}:${{secrets.SERVER_ROOT}}

      - name: Install dependencies on server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "cd ${{secrets.SERVER_ROOT}} && npm install"

      - name: Build project on server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npm run build"

      - name: Migrate database
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npm run db-migrate"

      - name: Seed database
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npm run db-seed"
